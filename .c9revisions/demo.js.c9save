{"ts":1351839905689,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var gel = require('gel-js'),\n    cli = require('readline').createInterface(process.stdin, process.stdout, completer),\n    context = {};\n\ncli.setPrompt(\"> \", 2);\ncli.on('line', function(line) {\n    try{\n    \n    \n        /*************************\n            ******************\n                **********\n                    */\n                    \n        var result = gel.parse(line, context);\n        \n                    /*\n                **********\n            ******************\n        *************************/\n\n        \n        console.log(''+result);\n    }catch(err){    \n        console.log(err);    \n    }\n    console.log(\"\"); \n    cli.prompt();\n});\ncli.prompt();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngel.functions[\"stupidFunction\"] = function(value){\n    return \"this function is stupid: \" + value;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngel.tokenConverters.primitives[\"myStupidToken\"] = function(expression){\n    \n    if(expression.indexOf(\"OMG\") === 0){\n    \n        var value = \"WTF\",\n            index = 3, //3 characters were processed\n            type = 'OMG',\n            callback = function(value, scope){\n                var date = new Date();\n                return value + \" IT'S \" + date.getHours() % 12 + \":\" + date.getMinutes() + (date.getHours() >= 12 ? 'PM' : 'AM' ) + \" ALREADY!\";\n            };\n       \n        return gel.tokenResult(value, index, type, callback);\n        \n    }\n\n    return;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction completer(line){\n    var lastToken = line.match(/[$A-Z_][0-9A-Z_$]*$/i),\n        restOfLine = line.replace(/[$A-Z_][0-9A-Z_$]*$/i, ''),\n        hits =[],\n        completions = [];\n        \n    for(var key in gel.functions){\n        completions.push(key);\n        if (key.indexOf(lastToken) == 0) {\n            // console.log('bang! ' + key);\n            hits.push(restOfLine + key + \" \");\n        }\n    }\n    \n    return [hits && hits.length ? hits : completions, line];\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//gel.functions['='] = gel.functions['=='];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncontext.newLine = \"                                                                                                                                                                                                           \";\n\ncontext.attendies = [\n    {\n        firstname: \"John\",\n        surnam: \"Smith\",\n        age: 20\n    },\n    {\n        firstname: \"Bob\",\n        surnam: \"Down\",\n        age: 90\n    }\n];\n\ncontext.time = new Date(2012, 10, 5, 18, 0);\n\ncontext.address = \"Toowong Library\";\n\ncontext.sponsors = [\n    \"ninefold\",\n    \"YOW!\"\n];\n\ncontext.topics = [\n    {\n        speaker: \"Jonathan Gros-Dubois\",\n        title: \"Introducing nCombo: a new Node Framework\",\n        tags: [\"node\", \"framework\", \"nCombo\"]\n    },\n    {\n        speaker: \"Tim Oxley\",\n        title: \"Harmony in Node: New JavaScript features you can use in Node today\",\n        tags: [\"node\"]\n    },\n    {\n        speaker: \"Thomas Davis\",\n        title: \"Node as a Chrome extension, a Node server wherever you go\",\n        tags: [\"node\", \"chrome\", \"extendion\"]\n    },\n    {\n        speaker: \"Damon Oehlman\",\n        title: \"Better than MVC: Think about other approaches before picking up the MVC hammer (from his talk at Web Directions South)\",\n        tags: [\"MVC\", \"Hammer\"]\n    }\n];\n\n\n\n\n\n\n\n\n\n\n\n\n\n//(last (filter topics {topic (== topic.speaker \"Tim Oxley\")})).title\n\n\n\n\n\n\n\n//(concat \"  topics including 'node'> \" (fold (filter topics {topic (contains topic.tags \"node\")}) \" \" {result current (concat result current.title \",\" newLine)}))\n\n\n\n\n\n\n\n\n// (timeBetween dateTimeNow time 'days')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction toArray(args){\n    return Array.prototype.slice.call(args);\n}\n\n\ngel.functions[\"fold\"] = function fold(){\n    var args = toArray(arguments),\n        fn = args.pop(),\n        seed = args.pop(),\n        array = args[0],\n        result = seed;\n    \n    if(args.length > 1){\n        array = args;\n    }\n        \n    for(var i = 0; i < array.length; i++){\n        result = fn.call(this, result, array[i]);\n    }\n    \n    return result;\n};\n\n\n    \ngel.functions['timeBetween'] = function toStrings(date1, date2, units){\n    var result = Math.max(date1, date2) - Math.min(date1, date2),\n        seconds = 1000,\n        hours = minutes = 60,\n        days = 24;\n    \n    if(units == 'days'){\n        result = result / seconds / minutes / hours/ days;\n    }\n    \n    if(units == 'hours'){\n        result = result / seconds / minutes / hours;\n    }\n    \n    if(units == 'minutes'){\n        result = result / seconds / minutes;\n    }\n    \n    if(units == 'seconds'){\n        result = result / seconds;\n    }\n    \n    return result;\n};\n\n\n\n\n\ngel.tokenConverters.primitives[\"dateTimeNow\"] = function(expression){\n    \n    if(expression.indexOf(\"dateTimeNow\") === 0){\n    \n        var value = \"dateTimeNow\",\n            index = value.length,\n            type = 'dateTimeNow',\n            callback = function(value, scope){\n                return new Date();\n            };\n       \n        return gel.tokenResult(value, index, type, callback);\n        \n    }\n\n    return;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]],"start1":0,"start2":0,"length1":0,"length2":5196}]],"length":5196}
{"contributors":[],"silentsave":false,"ts":1351839971210,"patch":[[{"diffs":[[0,"oken) =="],[1,"="],[0," 0) {\n  "]],"start1":1797,"start2":1797,"length1":16,"length2":17},{"diffs":[[0,"line];\n}"],[-1,";"],[0,"\n\n\n\n\n\n\n\n"]],"start1":1978,"start2":1978,"length1":17,"length2":16},{"diffs":[[0,"    "],[-1,"hours = minute"],[1,"minutes = 60,\n        hour"],[0,"s = "]],"start1":4325,"start2":4325,"length1":22,"length2":34}]],"length":5208,"saved":false}
